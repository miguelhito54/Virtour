---
import TOCHeading from "@/components/blog/TOCHeading.astro";
import type { MarkdownHeading } from "astro";

interface Props {
  headings: MarkdownHeading[];
  author: string; // Replace imagePath with author
}

const { headings: rawHeadings, author } = Astro.props;

// Debug log to verify the author value
console.log("Author passed to TOC:", author);

// Map author to their respective image
const authorImages = {
  "Cristian Barrientos": "/images/cris.jpeg",
  "Sebastian Marin": "/images/sebas.jpeg",
  "Miguel Angel": "/images/migue.jpg",
};

const imagePath = author in authorImages ? authorImages[author as keyof typeof authorImages] : "/images/default.jpg";

// Transform rawHeadings into TocItem format
const headings = rawHeadings.map((heading) => ({
  ...heading,
  children: [], // Add an empty children array to conform to TocItem type
}));
---

<div class="hidden md:block w-full max-w-[300px]">
  <div class="bg-bgColor rounded-b-lg">
    <div
      class="rounded pb-6 bg-color-75 border-b border-l border-r border-t border-special-light"
    >
      <div class="flex justify-center items-center px-8 py-6">
        <img
          src={imagePath}
          alt={`${author}'s Image`}
          class="rounded-full w-32 h-32 object-cover"
        />
      </div>
    </div>
  </div>
  <ul>
    {headings.map((heading) => (
      <TOCHeading heading={heading} />
    ))}
  </ul>
</div>
